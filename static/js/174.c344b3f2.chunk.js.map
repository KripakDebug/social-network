{"version":3,"file":"static/js/174.c344b3f2.chunk.js","mappings":"+OACA,GAAgB,QAAU,yBAAyB,KAAO,sBAAsB,OAAS,wBAAwB,eAAe,8BAA8B,kBAAkB,iCAAiC,KAAO,sBAAsB,SAAW,0BAA0B,YAAc,8B,SCU/R,EARc,SAAH,GAAoB,IAAdA,EAAO,EAAPA,QACf,OACE,gBAAKC,UAAWC,EAAAA,mBAAqB,UACnC,gBAAKD,UAAWC,EAAAA,QAAU,SAAEF,KAGlC,E,UCSA,EAdW,SAAH,GAAsB,IAAhBG,EAAE,EAAFA,GAAIC,EAAI,EAAJA,KAChB,OACE,eAAIH,UAAWC,EAAAA,KAAO,UACpB,SAAC,KAAO,CACNG,GAAI,aAAeF,EACnBF,UAAW,SAACK,GAAO,OAAMA,EAAQC,SAAWL,EAAAA,OAAW,EAAE,EAAE,SAE1DE,KAIT,ECNII,GAAcC,EAAAA,EAAAA,GAAiB,IAa/BC,GAAiBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,UAAjBD,EATH,SAACE,GACnB,IAAMC,GAAWC,EAAAA,EAAAA,GAAQ,YACzB,OACE,kBAAMC,SAAUH,EAAMI,aAAchB,UAAWC,EAAAA,YAAc,WAC3D,SAACgB,EAAA,EAAK,CAACd,KAAK,iBAAiBe,UAAWL,EAAUM,SAAU,CAACC,EAAAA,EAAUb,GAAcc,YAAY,wBACjG,uCAGN,IAwBA,EAtBgB,SAACT,GAOd,OACC,iBAAKZ,UAAWC,EAAAA,QAAU,WACxB,eAAID,UAAWC,EAAAA,gBAAkB,SAC9BW,EAAMU,MAAMC,KAAI,SAACC,GAAI,OACpB,SAAC,EAAI,CAACrB,KAAMqB,EAAKrB,KAAoBD,GAAIsB,EAAKtB,IAAlBsB,EAAKtB,GAAmB,OAGxD,iBAAKF,UAAWC,EAAAA,SAAW,UACxBW,EAAMa,QAAQF,KAAI,SAAAG,GAAM,OAAI,SAAC,EAAO,CAAkB3B,QAAS2B,EAAO3B,SAA3B2B,EAAOxB,GAA8B,KAClF,SAACO,EAAc,CAACM,SAbD,SAACY,GAEnBf,EAAMgB,WAAWD,EAAOE,eAC5B,SAcA,ECpBA,GAAeC,EAAAA,EAAAA,IACbC,EAAAA,GACAC,EAAAA,EAAAA,KAnBoB,SAACC,GACrB,MAAO,CACLR,QAASQ,EAAMC,YAAYT,QAC3BI,eAAgBI,EAAMC,YAAYL,eAClCP,MAAOW,EAAMC,YAAYZ,MAE7B,IACyB,SAACa,GACxB,MAAO,CAELP,WAAY,SAACC,GACXM,GAASC,EAAAA,EAAAA,GAAwBP,GACnC,EAEJ,IAGA,CAGEQ,E","sources":["webpack://my-app/./src/Components/Dialogs/Dialogs.module.css?db5c","Components/Dialogs/Message/Message.jsx","Components/Dialogs/User/User.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__vYOoP\",\"user\":\"Dialogs_user__eesWh\",\"active\":\"Dialogs_active__O2cSE\",\"dialogs-list\":\"Dialogs_dialogs-list__QcJV+\",\"message-wrapper\":\"Dialogs_message-wrapper__YWUma\",\"name\":\"Dialogs_name__cdrMh\",\"messages\":\"Dialogs_messages__Rkaar\",\"sendMessage\":\"Dialogs_sendMessage__atmzx\"};","import React from \"react\";\r\nimport c from './../Dialogs.module.css'\r\n\r\nconst Message = ({ message}) => {\r\n    return (\r\n      <div className={c[\"message-wrapper\"]}>\r\n        <div className={c.message}>{message}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default Message;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport c from './../Dialogs.module.css'\r\n\r\nconst User = ({ id, name }) => {\r\n    return (\r\n      <li className={c.user}>\r\n        <NavLink\r\n          to={\"/messages/\" + id}\r\n          className={(navData) => (navData.isActive ? c.active : \"\")}\r\n        >\r\n          {name}\r\n        </NavLink>\r\n      </li>\r\n    );\r\n  };\r\n\r\n\r\n  export default User;","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\nimport { Element } from \"../common/FormsControls/FormsControls\";\r\nimport c from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport User from \"./User/User\";\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\n\r\n\r\nconst SendMessage = (props) => {\r\n  const Textarea = Element('textarea')\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={c.sendMessage}>\r\n      <Field name=\"newMessageText\" component={Textarea} validate={[required, maxLength50]} placeholder='Enter your message'/>\r\n      <button>Send</button>\r\n    </form>\r\n  )\r\n}\r\nconst LoginReduxForm = reduxForm({form: 'dialog'})(SendMessage);\r\nconst Dialogs = (props) => {\r\n  \r\n \r\n  let addNewMessage = (values) => {\r\n    \r\n    props.addMessage(values.newMessageText)\r\n}\r\n   return (\r\n    <div className={c.dialogs}>\r\n      <ul className={c[\"dialogs-list\"]}>\r\n        {props.users.map((user) => (\r\n          <User name={user.name} key={user.id} id={user.id} />\r\n        ))}\r\n      </ul>\r\n      <div className={c.messages}>\r\n        {props.dialogs.map(dialog => <Message  key={dialog.id} message={dialog.message}/>)}\r\n       <LoginReduxForm onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport {addMessageActionCreator} from '../../redux/dialogs-reducer';\r\nimport { withAuthRedirect } from \"../hoc/AuthRedirect\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogs: state.dialogsPage.dialogs,\r\n    newMessageText: state.dialogsPage.newMessageText,\r\n    users: state.dialogsPage.users,\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    \r\n    addMessage: (newMessageText) => {\r\n      dispatch(addMessageActionCreator(newMessageText));\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  withAuthRedirect,\r\n  connect(mapStateToProps, mapDispatchToProps)\r\n)(Dialogs)\r\n\r\n\r\n"],"names":["message","className","c","id","name","to","navData","isActive","maxLength50","maxLengthCreator","LoginReduxForm","reduxForm","form","props","Textarea","Element","onSubmit","handleSubmit","Field","component","validate","required","placeholder","users","map","user","dialogs","dialog","values","addMessage","newMessageText","compose","withAuthRedirect","connect","state","dialogsPage","dispatch","addMessageActionCreator","Dialogs"],"sourceRoot":""}