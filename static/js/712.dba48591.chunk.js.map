{"version":3,"file":"static/js/712.dba48591.chunk.js","mappings":"sMA+BMA,GAAiBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,SAAjBD,EAtBL,SAACE,GAChB,IAAMC,GAAQC,EAAAA,EAAAA,GAAQ,SACrB,OACI,kBAAMC,SAAUH,EAAMI,aAAa,WAC/BC,EAAAA,EAAAA,GAAY,QAAS,QAASJ,EAAO,CAACK,EAAAA,GAAW,SACjDD,EAAAA,EAAAA,GAAY,WAAY,WAAYJ,EAAO,CAACK,EAAAA,GAAW,aACvDD,EAAAA,EAAAA,GAAY,KAAM,aAAcJ,EAAO,KAAM,WAAY,eAExDD,EAAMO,UAAW,4BACd,gBAAKC,IAAKR,EAAMO,QAASE,IAAI,aAC5BJ,EAAAA,EAAAA,GAAY,qBAAsB,UAAWJ,EAAO,CAACK,EAAAA,GAAW,WAIpEN,EAAMU,QAAS,gBAAKC,UAAWC,EAAAA,EAAAA,iBAAmB,SACtCZ,EAAMU,SAEnB,wCAGZ,IAyBA,WAAeG,EAAAA,EAAAA,KALS,SAACC,GAAK,MAAM,CAChCC,OAAQD,EAAME,KAAKD,OACnBR,QAASO,EAAME,KAAKT,QACvB,GAEuC,CAACU,MAAAA,EAAAA,IAAzC,EArBc,SAACjB,GAKX,OAAGA,EAAMe,QACE,SAAC,KAAQ,CAACG,GAAI,cAGrB,4BACI,mCACA,SAACrB,EAAc,CAACM,SAVP,SAACgB,GAEdnB,EAAMiB,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASZ,QACjF,EAO4CA,QAASP,EAAMO,YAG/D,G","sources":["Components/Login/Login.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { required } from \"../../utils/validators/validators\";\r\nimport { CreateField, Element } from \"../common/FormsControls/FormsControls\";\r\nimport { login } from \"../../redux/auth-reducer\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport c from './../common/FormsControls/FormsControls.module.css'\r\n\r\nconst LoginForm = (props) => {\r\n   const Input = Element('input')\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n           {CreateField('Login', 'email', Input, [required], 'text')}\r\n           {CreateField('Password', 'password', Input, [required], 'password')}\r\n           {CreateField(null, 'rememberMe', Input, null, 'checkbox', \"remember me\")}\r\n            \r\n            {props.captcha && <div>\r\n                <img src={props.captcha} alt='captcha'/>\r\n                {CreateField('Symbols from image', 'captcha', Input, [required], 'text')}\r\n                </div>}\r\n           \r\n\r\n            {props.error && <div className={c.formSummaryError}>\r\n                        {props.error}\r\n               </div>}\r\n            <button>Login</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        \r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n    if(props.isAuth){\r\n        return <Navigate to={'/profile'}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captcha={props.captcha}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captcha: state.auth.captcha\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login)"],"names":["LoginReduxForm","reduxForm","form","props","Input","Element","onSubmit","handleSubmit","CreateField","required","captcha","src","alt","error","className","c","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"sourceRoot":""}